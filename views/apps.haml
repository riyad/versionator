
#apps
  %h2
    Applications
  .container
    %a.check-all-newest-versions.button
      = ajax_loader
      = image("version-check-newest")
      Check all newest versions
  -# empty container for spacing
  .message.container
  - @apps.each do |app|
    %div{ :id => "#{app.basic_name}-app", :class => "container border-all app #{app.basic_name}-app" }
      = toggle_container("##{app.basic_name}-app", :expanded)
      .head
        %h3.toggle.button
          = mini_logo_for(app)
          = app.app_name
          .description
            %span.total-installs
              Installations:
              %span.installs>= @installs_for_app[app].size
            &nbsp;
            %span.outdated-installs
              Outdated:
              %span.installs> unknown
      .body
        .logo= logo_for(app)
        %h3.toggle.button
          = image("app")
          = app.app_name
        .content
          .newest-version
            Newest Version:
            %span.version
            = ajax_loader
            %a.check-newest-version.button
              = image("version-check-newest")
              Check
          .project-links
            = link_to_app_project(app)
          .dirs.container
            Installations:
            %ul.vertical.list
              - @installs_for_app[app].each do |install|
                %li{ :id => dom_id_for_dir(install.base_dir), :class => "dir" }
                  = image("folder")
                  = install.base_dir
                  %span.description
                    %span.installed-version
                      Installed:
                      %span.version>= install.installed_version
                    = link_to_app_release(install, :installed_version)
:javascript
  $(function() {
    $(".check-all-newest-versions.button").click(checkAllNewestVersions);
  });

  function updateVerdicts(app) {
    var nv = $(app).find(".newest-version .version").text();
    var installs = $(app).find(".dir");
    $(installs).each(function() {
      var img = $(this).find("img").not(".description img");
      var iv = $(this).find(".version").text();

      $(this).addClass("verdict border-all");
      if (nv == iv) {
        $(this).addClass("up-to-date");
        $(img).replaceWith('#{image("verdict-up-to-date-mini")}');
      } else {
        $(this).addClass("outdated");
        $(img).replaceWith('#{image("verdict-outdated-mini")}');
      }
    });

    updateSummaryVerdicts(app);
  }

  function updateSummaryVerdicts(app) {
    var img = $(app).find("h3 img");
    var outdatedInstalls = $(app).find(".verdict.outdated");
    var outdatedInstallsSummary = $(app).find(".outdated-installs .installs");

    console.log(app);
    console.log(outdatedInstallsSummary);

    $(app).addClass("verdict striped");
    if (outdatedInstalls.length === 0) {
      $(app).addClass("up-to-date");
      $(outdatedInstallsSummary).html("none");
    } else {
      $(app).addClass("outdated");
      $(outdatedInstallsSummary).html(outdatedInstalls.length);
    }
  }
